# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Webapp Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  WEBAPP_NAME: app-maif-secret-inno2-dev
  RG: rg-sdr-cli


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: "17"

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: "${{ github.workspace }}/target/*.jar"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: "staging"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          package: "*.jar"
      
      - name: Start Preview mode (Injecte ENV VAR from production Slot)
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp deployment slot swap  -g ${{ env.RG }} -n ${{ env.WEBAPP_NAME }} --slot staging --target-slot production --action preview
      
      - name: Health check Slot Staging
        id: health
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://${{ env.WEBAPP_NAME }}-staging.azurewebsites.net/health
          max-attempts: 3
          retry-delay: 10s
      
      - name: Swap Stagint to Production
        if: steps.build.outputs.exit_code == 0
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp deployment slot swap  -g ${{ env.RG }} -n ${{ env.WEBAPP_NAME }} --slot staging --target-slot production
          
